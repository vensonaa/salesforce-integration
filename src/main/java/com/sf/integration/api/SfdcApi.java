/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sf.integration.api;

import java.util.List;
import java.util.Map;

import javax.validation.constraints.NotNull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


import com.sf.integration.model.ConnectionOAuth2;
import com.sf.integration.model.ErrorResponse;


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-09-06T14:14:17.501Z")

@Api(value = "sfdc", description = "the sfdc API")
public interface SfdcApi {

	@ApiOperation(value = "Sobjects by SOQL", nickname = "SObject by SOQL", code = 200, httpMethod = "POST")
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Success", response = ResponseEntity.class),
			  @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponse.class),
			  @ApiResponse(code = 500, message = "Internal Server Error", response = ErrorResponse.class) })
	@RequestMapping(value = "/sfdc/sobjects", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<String> getSObjects(
			@NotNull @ApiParam(required = true, value = "Connection") @RequestBody ConnectionOAuth2 connectionOAuth2,
			@NotNull @ApiParam(required = true, value = "Input") @RequestParam String soql) throws Exception;
	
	
	
	@ApiOperation(value = "Upsert Sobjects", nickname = "Upsert SObject", code = 200, httpMethod = "PATCH")
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Success", response = ResponseEntity.class),
			  @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponse.class),
			  @ApiResponse(code = 500, message = "Internal Server Error", response = ErrorResponse.class) })
	@RequestMapping(value = "/sfdc/sobjects/{id}", produces = { "application/json" }, method = RequestMethod.PATCH)
	ResponseEntity<String> upsertSobjects(
			@NotNull @ApiParam(required = true, value = "Connection") @RequestBody ConnectionOAuth2 connectionOAuth2,
			@NotNull @ApiParam(required = true, value = "Input Json") @RequestParam String json, 
			@NotNull @ApiParam(required = true, value = "Sobject Type") @RequestParam String sobjectType,
			@PathVariable("id") String id) throws Exception;
	
	
	
	@ApiOperation(value = "Sobjects by SOQL", nickname = "SObject by SOQL", code = 200, httpMethod = "POST")
	@ApiResponses(value = { @ApiResponse(code = 200, message = "Success", response = ResponseEntity.class),
			  @ApiResponse(code = 400, message = "Bad Request", response = ErrorResponse.class),
			  @ApiResponse(code = 500, message = "Internal Server Error", response = ErrorResponse.class) })
	@RequestMapping(value = "/sfdc/createSobjects", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<String> createSObjects(
			@NotNull @ApiParam(required = true, value = "Connection") @RequestBody ConnectionOAuth2 connectionOAuth2,
			@NotNull @ApiParam(required = true, value = "Sobject Type") @RequestParam String sobjectType,
			@NotNull @ApiParam(required = true, value = "Input Json") @RequestParam String json) throws Exception;
	
	

}
